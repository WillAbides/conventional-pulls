// Code generated by MockGen. DO NOT EDIT.
// Source: conventionalpulls.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPRLabelFetcher is a mock of PRLabelFetcher interface
type MockPRLabelFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockPRLabelFetcherMockRecorder
}

// MockPRLabelFetcherMockRecorder is the mock recorder for MockPRLabelFetcher
type MockPRLabelFetcherMockRecorder struct {
	mock *MockPRLabelFetcher
}

// NewMockPRLabelFetcher creates a new mock instance
func NewMockPRLabelFetcher(ctrl *gomock.Controller) *MockPRLabelFetcher {
	mock := &MockPRLabelFetcher{ctrl: ctrl}
	mock.recorder = &MockPRLabelFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPRLabelFetcher) EXPECT() *MockPRLabelFetcherMockRecorder {
	return m.recorder
}

// FetchPRLabels mocks base method
func (m *MockPRLabelFetcher) FetchPRLabels(id int) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchPRLabels", id)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchPRLabels indicates an expected call of FetchPRLabels
func (mr *MockPRLabelFetcherMockRecorder) FetchPRLabels(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchPRLabels", reflect.TypeOf((*MockPRLabelFetcher)(nil).FetchPRLabels), id)
}
